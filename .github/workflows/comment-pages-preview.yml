name: Comment Cloudflare Pages Preview URL

on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  comment:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Debug: echo vars (safe)
        run: |
          echo "Account: ${{ secrets.CF_ACCOUNT_ID }}"
          echo "Project: ${{ secrets.CF_PAGES_PROJECT }}"

      - name: Debug: list Pages projects for this account
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: |
          curl -fsSL -H "Authorization: Bearer ${CF_API_TOKEN}" \
            "https://api.cloudflare.com/client/v4/accounts/${CF_ACCOUNT_ID}/pages/projects" \
          | jq -r '.result[].name'

      - name: Get latest Preview URL for this branch
        id: cf
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_PAGES_PROJECT: ${{ secrets.CF_PAGES_PROJECT }}
          BRANCH: ${{ github.head_ref }}
        run: |
          set -euo pipefail
          API="https://api.cloudflare.com/client/v4/accounts/${CF_ACCOUNT_ID}/pages/projects/${CF_PAGES_PROJECT}/deployments"
          RESP="$(curl -fsSL -H "Authorization: Bearer ${CF_API_TOKEN}" "$API")" || { echo "Failed to fetch deployments"; exit 1; }
          URL="$(echo "$RESP" | jq -r --arg BRANCH "$BRANCH" '
            .result
            | map(select(.environment=="preview" and (.deployment_trigger.metadata.branch==$BRANCH)))
            | sort_by(.created_on) | reverse | (.[0].url // empty)
          ')"
          echo "preview_url=$URL" >> "$GITHUB_OUTPUT"

      - name: Post/Update sticky PR comment
        if: steps.cf.outputs.preview_url != ''
        uses: actions/github-script@v7
        env:
          PREVIEW_URL: ${{ steps.cf.outputs.preview_url }}
        with:
          script: |
            const marker = "<!-- PREEV_PREVIEW_LINK -->";
            const body = `${marker}
            ðŸš€ Preview is ready:

            ${process.env.PREVIEW_URL}

            (Cloudflare Pages)`;
            const { owner, repo, number } = context.issue;
            const { data: comments } = await github.rest.issues.listComments({ owner, repo, issue_number: number });
            const existing = comments.find(c => c.user?.type === "Bot" && c.body?.includes(marker));
            if (existing) {
              await github.rest.issues.updateComment({ owner, repo, comment_id: existing.id, body });
            } else {
              await github.rest.issues.createComment({ owner, repo, issue_number: number, body });
            }

      - name: Log if no preview yet
        if: steps.cf.outputs.preview_url == ''
        run: echo "No preview URL yetâ€”wait for Pages to finish building, then push again."
